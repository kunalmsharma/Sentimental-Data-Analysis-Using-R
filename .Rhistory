unique(Train_data$Medical_History_28)
Train_data$Medical_History_28.1 <- 0
Train_data$Medical_History_28.2 <- 0
Train_data$Medical_History_28.3 <- 0
Train_data$Medical_History_28.1[Train_data$Medical_History_28 == 1] <- 1
Train_data$Medical_History_28.2[Train_data$Medical_History_28 == 2] <- 1
Train_data$Medical_History_28.3[Train_data$Medical_History_28 == 3] <- 1
Train_data$Medical_History_28 <- NULL
unique(Train_data$Medical_History_29)
Train_data$Medical_History_29.1 <- 0
Train_data$Medical_History_29.2 <- 0
Train_data$Medical_History_29.3 <- 0
Train_data$Medical_History_29.1[Train_data$Medical_History_29 == 1] <- 1
Train_data$Medical_History_29.2[Train_data$Medical_History_29 == 2] <- 1
Train_data$Medical_History_29.3[Train_data$Medical_History_29 == 3] <- 1
Train_data$Medical_History_29 <- NULL
unique(Train_data$Medical_History_30)
unique(Train_data$Medical_History_30)
Train_data$Medical_History_30.1 <- 0
Train_data$Medical_History_30.2 <- 0
Train_data$Medical_History_30.3 <- 0
Train_data$Medical_History_30.1[Train_data$Medical_History_30 == 1] <- 1
Train_data$Medical_History_30.2[Train_data$Medical_History_30 == 2] <- 1
Train_data$Medical_History_30.3[Train_data$Medical_History_30 == 3] <- 1
Train_data$Medical_History_30 <- NULL
unique(Train_data$Medical_History_31)
unique(Train_data$Medical_History_31)
Train_data$Medical_History_31.1 <- 0
Train_data$Medical_History_31.2 <- 0
Train_data$Medical_History_31.3 <- 0
Train_data$Medical_History_31.1[Train_data$Medical_History_31 == 1] <- 1
Train_data$Medical_History_31.2[Train_data$Medical_History_31 == 2] <- 1
Train_data$Medical_History_31.3[Train_data$Medical_History_31 == 3] <- 1
Train_data$Medical_History_31 <- NULL
sum(is.na(Train_data$Medical_History_32))
sum(is.na(Train_data$Medical_History_32))
Train_data$Medical_History_32 = NULL
unique(Train_data$Medical_History_33)
Train_data$Medical_History_33
Train_data$Medical_History_33=factor(Train_data$Medical_History_33, labels = c(0:1))
Train_data$Medical_History_33
unique(Train_data$Medical_History_34)
Train_data$Medical_History_34.1 <- 0
Train_data$Medical_History_34.2 <- 0
Train_data$Medical_History_34.3 <- 0
Train_data$Medical_History_34.1[Train_data$Medical_History_34 == 1] <- 1
Train_data$Medical_History_34.2[Train_data$Medical_History_34 == 2] <- 1
Train_data$Medical_History_34.3[Train_data$Medical_History_34 == 3] <- 1
Train_data$Medical_History_34 <- NULL
unique(Train_data$Medical_History_35)
Train_data$Medical_History_35.1 <- 0
Train_data$Medical_History_35.2 <- 0
Train_data$Medical_History_35.3 <- 0
Train_data$Medical_History_35.1[Train_data$Medical_History_35 == 1] <- 1
Train_data$Medical_History_35.2[Train_data$Medical_History_35 == 2] <- 1
Train_data$Medical_History_35.3[Train_data$Medical_History_35 == 3] <- 1
Train_data$Medical_History_35 <- NULL
unique(Train_data$Medical_History_36)
Train_data$Medical_History_36.1 <- 0
Train_data$Medical_History_36.2 <- 0
Train_data$Medical_History_36.3 <- 0
Train_data$Medical_History_36.1[Train_data$Medical_History_36 == 1] <- 1
Train_data$Medical_History_36.2[Train_data$Medical_History_36 == 2] <- 1
Train_data$Medical_History_36.3[Train_data$Medical_History_36 == 3] <- 1
Train_data$Medical_History_36 <- NULL
unique(Train_data$Medical_History_37)
Train_data$Medical_History_37.1 <- 0
Train_data$Medical_History_37.2 <- 0
Train_data$Medical_History_37.3 <- 0
Train_data$Medical_History_37.1[Train_data$Medical_History_37 == 1] <- 1
Train_data$Medical_History_37.2[Train_data$Medical_History_37 == 2] <- 1
Train_data$Medical_History_37.3[Train_data$Medical_History_37 == 3] <- 1
Train_data$Medical_History_37 <- NULL
unique(Train_data$Medical_History_38)
unique(Train_data$Medical_History_38)
Train_data$Medical_History_38
Train_data$Medical_History_38=factor(Train_data$Medical_History_38, labels = c(0:1))
Train_data$Medical_History_38
unique(Train_data$Medical_History_39)
Train_data$Medical_History_39.1 <- 0
Train_data$Medical_History_39.2 <- 0
Train_data$Medical_History_39.3 <- 0
Train_data$Medical_History_39.1[Train_data$Medical_History_39 == 1] <- 1
Train_data$Medical_History_39.2[Train_data$Medical_History_39 == 2] <- 1
Train_data$Medical_History_39.3[Train_data$Medical_History_39 == 3] <- 1
Train_data$Medical_History_39 <- NULL
unique(Train_data$Medical_History_40)
unique(Train_data$Medical_History_40)
Train_data$Medical_History_40.1 <- 0
Train_data$Medical_History_40.2 <- 0
Train_data$Medical_History_40.3 <- 0
Train_data$Medical_History_40.1[Train_data$Medical_History_40 == 1] <- 1
Train_data$Medical_History_40.2[Train_data$Medical_History_40 == 2] <- 1
Train_data$Medical_History_40.3[Train_data$Medical_History_40 == 3] <- 1
Train_data$Medical_History_40 <- NULL
unique(Train_data$Medical_History_41)
unique(Train_data$Medical_History_41)
Train_data$Medical_History_41.1 <- 0
Train_data$Medical_History_41.2 <- 0
Train_data$Medical_History_41.3 <- 0
Train_data$Medical_History_41.1[Train_data$Medical_History_41 == 1] <- 1
Train_data$Medical_History_41.2[Train_data$Medical_History_41 == 2] <- 1
Train_data$Medical_History_41.3[Train_data$Medical_History_41 == 3] <- 1
Train_data$Medical_History_41 <- NULL
s <- sample(2,nrow(Train_data), replace = TRUE, prob = c(0.8,0.2))
train.set <- Train_data[s==1,]
test.set <- Train_data[s==2,]
install.packages("caret")
install.packages("caret")
install.packages("e1071", dependencies = TRUE)
install.packages("e1071", dependencies = TRUE)
library(caret)
library(e1071)
index<-1:nrow(train.set)
sample_index<-sample(index,trunc(length(index)*1/100))
train_dataset <- train.set[sample_index,]
test_dataset <- test.set[sample_index,]
rm <- lm(Response ~., data = train_dataset)
summary(rm)
m1 <- tune.svm(Response ~ ., data = train_dataset, gamma = 10^(-4:-1), cost = 10^(-1:1))
summary(m1)
model <- svm(Response ~ Product_Info_4 + Product_Info_6 + Ins_Age + Ht + Wt + BMI + Employment_Info_3
+ Employment_Info_5 + InsuredInfo_2 + InsuredInfo_5 +InsuredInfo_6 + InsuredInfo_7 + Insurance_History_1
+ Insurance_History_2.1 + Insurance_History_3.1 + Family_Hist_2 +Family_Hist_3 +Family_Hist_4
+ Medical_History_3.2 +Medical_History_4 + Medical_History_11.2 + Medical_History_12.2
+ Medical_History_13.1 + Medical_History_17.2 + Medical_History_22 + Medical_History_23.1
+ Medical_History_27.1 + Medical_History_29.1 + Medical_History_30.2 + Medical_History_31.1
+ Medical_History_35.1 + Medical_History_39.1 + Medical_History_40.1 + Medical_Keyword_2
+ Medical_Keyword_3  + Medical_Keyword_6 + Medical_Keyword_9  + Medical_Keyword_15 + Medical_Keyword_19
+ Medical_Keyword_22 + Medical_Keyword_25 + Medical_Keyword_33 + Medical_Keyword_34 + Medical_Keyword_38
+ Medical_Keyword_41 + Medical_Keyword_45 , data = train_dataset, kernel = "radial", gamma = 0.01, cost = 10)
summary(Train_data)
view(Train_data)
Train_data
View(Train_data)
model <- svm(Response ~ Product_Info_4 + Product_Info_6 + Ins_Age + Ht + Wt + BMI + Employment_Info_3
+ Employment_Info_5 + InsuredInfo_2 + InsuredInfo_5 +InsuredInfo_6 + InsuredInfo_7 + Insurance_History_1
+ Insurance_History_2.1 + Insurance_History_3.1 + Family_Hist_2 +Family_Hist_3 +Family_Hist_4
+ Medical_History_3.2 +Medical_History_4 + Medical_History_11.2 + Medical_History_12.2
+ Medical_History_13.1 + Medical_History_17.2 + Medical_History_22 + Medical_History_23.1
+ Medical_History_27.1 + Medical_History_29.1 + Medical_History_30.2 + Medical_History_31.1
+ Medical_History_35.1 + Medical_History_39.1 + Medical_History_40.1 + Medical_Keyword_2
+ Medical_Keyword_3  + Medical_Keyword_6 + Medical_Keyword_9  + Medical_Keyword_15 + Medical_Keyword_19
+ Medical_Keyword_22 + Medical_Keyword_25 + Medical_Keyword_33 + Medical_Keyword_34 + Medical_Keyword_38
+ Medical_Keyword_41 + Medical_Keyword_45 , data = train_dataset, kernel = "radial", gamma = 0.01, cost = 10)
print(model)
model <- svm(Response ~ Product_Info_4 + Product_Info_6 + Ins_Age + Ht + Wt + BMI + Employment_Info_3
+ Employment_Info_5 + InsuredInfo_2 + InsuredInfo_5 +InsuredInfo_6 + InsuredInfo_7 + Insurance_History_1
+ Insurance_History_2.1 + Insurance_History_3.1 + Family_Hist_2 +Family_Hist_3 +Family_Hist_4
+ Medical_History_3.2 +Medical_History_4 + Medical_History_11.2 + Medical_History_12.2
+ Medical_History_13.1 + Medical_History_17.2 + Medical_History_22 + Medical_History_23.1
+ Medical_History_27.1 + Medical_History_29.1 + Medical_History_30.2 + Medical_History_31.1
+ Medical_History_35.1 + Medical_History_39.1 + Medical_History_40.1 + Medical_Keyword_2
+ Medical_Keyword_3  + Medical_Keyword_6 + Medical_Keyword_9  + Medical_Keyword_15 + Medical_Keyword_19
+ Medical_Keyword_22 + Medical_Keyword_25 + Medical_Keyword_33 + Medical_Keyword_34 + Medical_Keyword_38
+ Medical_Keyword_41 + Medical_Keyword_45 , data = train_dataset, kernel = "radial", gamma = 0.01, cost = 10)
summary(model)
prediction <- predict(model, test_dataset)
tab <- table(pred = prediction, true = test_dataset[,198])
tab <- table(pred = prediction, true = test_dataset[,128])
tab <- table(pred = prediction, true = test_dataset[,197])
tab <- table(pred = prediction, true = test_dataset[,196])
tab <- table(pred = prediction, true = test_dataset[,199])
tab <- table(pred = prediction, true = test_dataset[,104])
tab <- table(pred = prediction, true = test_dataset[,105])
tab <- table(pred = prediction, true = test_dataset[,106])
tab <- table(pred = prediction, true = test_dataset[,103])
tab <- table(pred = prediction, true = test_dataset[,107])
tab <- table(pred = prediction, true = test_dataset[,108])
tab <- table(pred = prediction, true = test_dataset[,109])
tab <- table(pred = prediction, true = test_dataset[,104])
tab <- table(pred = prediction, true = test_dataset[,102])
tab <- table(pred = prediction, true = test_dataset[,101])
tab <- table(pred = prediction, true = test_dataset[,100])
prediction <- predict(model, test_dataset)
pr <- round(prediction)
summary(tab)
summary(prediction)
table(pr, test_dataset$Response)
svm = predict(model,test_dataset)
MSE <-mean((svm-test_dataset$Response)^2)
MSE
tab <- table(pred = prediction, true = test_dataset[,191])
tab <- table(pred = prediction, true = test_dataset[,170])
length((test_dataset))
tab <- table(pred = prediction, true = test_dataset[,197])
test_dataset
summary(tab)
length(test_dataset$Response)
length(test_dataset)
tab <- table(pred = prediction, true = test_dataset[,197])
tab <- table(pred = prediction, true = test_dataset[,])
tab <- table(pred = prediction, true = test_dataset[,120])
length(test_dataset)
tab <- table(pred = prediction, true = test_dataset[,197])
length(test_dataset)
pr <- round(prediction)
summary(tab)
summary(prediction)
table(pr, test_dataset$Response)
svm = predict(model,test_dataset)
MSE <-mean((svm-test_dataset$Response)^2)
MSE
tab <- table(pred = prediction, true = test_dataset[,198])
tab <- table(pred = prediction, true = test_dataset[,196])
tab <- table(pred = prediction, true = test_dataset[,197])
tab <- table(pred = prediction, true = test_dataset[,198])
tab <- table(pred = prediction, true = test_dataset[,199])
prediction <- predict(model, test_dataset)
tab <- table(pred = prediction, true = test_dataset[,197])
length(test_dataset)
pr <- round(prediction)
summary(tab)
summary(prediction)
table(pr, test_dataset$Response)
svm = predict(model,test_dataset)
MSE <-mean((svm-test_dataset$Response)^2)
tab <- table(pred = prediction, true = test_dataset[,197])
tab <- table(pred = prediction, true = test_dataset[-197])
prediction <-  predict(model, test_dataset[-197])
table(test_dateset[,197], prediction)
table(test_dataset[,197], prediction)
tab <- table(pred = prediction, true = test_dataset[197])
tab <- table(pred = prediction, true = test_dataset[,197])
prediction <-  predict(model, test_dataset[-46])
tab <- table(pred = prediction, true = test_dataset[,46])
summary(prediction)
prediction <-  predict(model, test_dataset[-46])
summary(prediction)
table(pr, test_dataset$Response)
svm = predict(model,test_dataset)
MSE <-mean((svm-test_dataset$Response)^2)
MSE
prediction <-  predict(model, test_dataset[-197])
tab <- table(pred = prediction, true = test_dataset[,197])
length(test_dataset)
file<-file.choose()
full.data<-read.csv(file.path(file),header=TRUE)
sum(is.na(full.data$Employment_Info_1)) #19 #mean
sum(is.na(full.data$Employment_Info_4)) #6779
sum(is.na(full.data$Employment_Info_6)) #10854
sum(is.na(full.data$Medical_History_1)) #8889
sum(is.na(full.data$Insurance_History_5)) #25396
sum(is.na(full.data$Family_Hist_2)) #28656
sum(is.na(full.data$Family_Hist_3)) #34241
sum(is.na(full.data$Family_Hist_4)) #25861
sum(is.na(full.data$Family_Hist_5)) #19184
sum(is.na(full.data$Medical_History_10)) #58824
sum(is.na(full.data$Medical_History_15)) #44596
sum(is.na(full.data$Medical_History_24)) #55580
sum(is.na(full.data$Medical_History_32)) #58274
summary(full.data)
my_data <- full.data[, c(-3,-1)]
cor_mat<- cor(my_data,method = "pearson", use = "p")
new_cor_mat<- round(cor_mat, 2)
new_cor_mat<- round(cor_mat, 2)
mat_cor<- new_cor_mat[abs(new_cor_mat) < 0.5] <- NA
full.data[is.na(full.data$Employment_Info_1),"Employment_Info_1"] <-boxplot.stats(full.data$Employment_Info_1)$stats[3]
View(full.data)
emp_info4_model<-glm(Employment_Info_4~Employment_Info_1+Employment_Info_2+Employment_Info_3+Employment_Info_5+Family_Hist_1,data = full.data)
emp_info4<-full.data[is.na(full.data$Employment_Info_4),c("Employment_Info_1","Employment_Info_2","Employment_Info_3","Employment_Info_5","Family_Hist_1")]
info4_predict<-predict(emp_info4_model,newdata = emp_info4)
full.data[is.na(full.data$Employment_Info_4),"Employment_Info_4"] <-info4_predict
emp_info6_model<-glm(Employment_Info_6~Employment_Info_1+Employment_Info_3+Employment_Info_4+Family_Hist_1,data = full.data)
emp_info6<-full.data[is.na(full.data$Employment_Info_6),c("Employment_Info_1","Employment_Info_3","Employment_Info_4","Family_Hist_1")]
info6_predict<-predict(emp_info6_model,newdata = emp_info6)
full.data[is.na(full.data$Employment_Info_6),"Employment_Info_6"] <-info6_predict
med_his1_model<-glm(Medical_History_1~Medical_History_2+Medical_History_3+Medical_History_6+Medical_History_8+Medical_History_9+Medical_History_12+Medical_History_13   , data = full.data)
med_his1<-full.data[is.na(full.data$Medical_History_1),c("Medical_History_2","Medical_History_3","Medical_History_6","Medical_History_8","Medical_History_9","Medical_History_12","Medical_History_13")]
hist1_predict<-predict(med_his1_model,newdata = med_his1)
full.data[is.na(full.data$Medical_History_1),"Medical_History_1"] <-hist1_predict
full.set<- subset(full.data, select = -c(Product_Info_2,Product_Info_1,Insurance_History_5,Family_Hist_2,Family_Hist_3,Family_Hist_4,Family_Hist_5,Medical_History_10,Medical_History_15,Medical_History_24,Medical_History_32))
scale.set<-subset(full.set, select= -c(Response,Medical_History_1,Employment_Info_1,Employment_Info_6,Ins_Age,Ht,Wt,BMI,Product_Info_4))
install.packages("dummies")
library(dummies)
new_my_data <- dummy.data.frame(full.set, names = scale.set)
sample_set<-sample(nrow(new_my_data),floor(0.7*nrow(new_my_data)))
train.data<- new_my_data[sample_set,]
test.data<- new_my_data[-sample_set,]
sample_set<-sample(nrow(new_my_data),floor(0.7*nrow(new_my_data)))
train.data<- new_my_data[sample_set,]
test.data<- new_my_data[-sample_set,]
pca <- prcomp(train.data, scale. = T)
names(pca)
std_dev <- pca$sdev
pca_var <- std_dev^2
prop_varex <- pca_var/sum(pca_var)
plot(prop_varex, xlab = "Principal Component",ylab = "Variance Ratio",type = "b")
plot(cumsum(prop_varex), xlab = "Principal Component",ylab = "Cumulative Variance",type = "b")
data.train <- data.frame(Response = train.data$Response, pca$x)
data.train <- data.train[,1:85]
library(rpart)
rpart.model <- rpart(Response ~ .,data = data.train, method = "anova")
plot(rpart.model)
text(rpart.model,pretty = 0,cex=0.75)
data.test <- predict(pca, newdata = test.data)
data.test <- as.data.frame(data.test)
data.test <- data.test[,1:85]
rpart.prediction <- predict(rpart.model, data.test)
tree_MSE<-mean((rpart.prediction-test.data$Response)^2)
tree_RMSE<-sqrt(tree_MSE)
rf.model<-randomForest(Response~., data = data.train)
reg_model<- lm(Response ~.,data=data.train)
reg.predict<-predict(reg_model,newdata = data.test)
reg_MSE<-mean((reg.predict-test.data$Response)^2)
reg_RMSE<-sqrt(reg_MSE)
summary(reg_model)
data.train
svm.trian <- sample(nrow(data.train),floor(0.01*nrow(data.train)))
svm.train <- sample(nrow(data.train),floor(0.01*nrow(data.train)))
s<-svm(Response ~., data = svm.train)
s<-svm(Response ~., data = svm.train)
svm.train
data.train[svm.train,]
s<-svm(Response ~., type=eps-regression,kernel="radial",gamma=10,cost=1, data = data.train[svm.train,])
s<-svm(Response ~., type="eps-regression",kernel="radial",gamma=10,cost=1, data = data.train[svm.train,])
summary(s)
m1 <- tune.svm(Response ~ ., data = data.train[svm.train,], gamma = 10^(-4:-1), cost = 10^(-1:1))
summary(m1)
s<-svm(Response ~., type="eps-regression",kernel="radial",gamma=0.01,cost=10, data = data.train[svm.train,])
summary(s)
svm.predict<- predict(svm,data.test[svm.test,])
svm.predict<- predict(s,data.test[svm.test,])
svm.test <- sample(nrow(data.test),floor(0.01*nrow(data.test)))
svm.predict<- predict(s,data.test[svm.test,])
summary(svm.predict)
install.packages("SDMTools")
library(SDMTools)
svm_MSE<-mean((svm.predict-data.test[svm.test,]$Response)^2)
svm_RMSE<-sqrt(svm_MSE)
svm_RMSE
data.test[svm.test,]$Response
data.test[svm.test,]
svm.train <- sample(nrow(data.train),floor(0.01*nrow(data.train)))
m1 <- tune.svm(Response ~ ., data = data.train[svm.train,], gamma = 10^(-4:-1), cost = 10^(-1:1))
svm_MSE<-mean((svm.predict-test.data[svm.test,]$Response)^2)
svm_RMSE<-sqrt(svm_MSE)
s
svm.predict
summary(full.data)
reg_model<- lm(Response ~.,data=data.train)
reg.predict<-predict(reg_model,newdata = data.test)
reg_MSE<-mean((reg.predict-test.data$Response)^2)
reg_RMSE<-sqrt(reg_MSE)
summary(reg_model)
plot(reg_model)
library(rpart)
rpart.model <- rpart(Response ~ .,data = data.train, method = "anova")
plot(rpart.model)
text(rpart.model,pretty = 0,cex=0.75)
fancyRpartPlot(rpart.model, palettes=c("Purples", "Reds"))
library(rpart.plot)
fancyRpartPlot(rpart.model, palettes=c("Purples", "Reds"))
library(ggplot2)
library(XLConnectJars)
library(XLConnect)
library(rpart)
library(party)
library(datasets)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
install.packages("xgboost")
library(xgboost)
fancyRpartPlot(rpart.model, palettes=c("Purples", "Reds"))
svm.train <- sample(nrow(data.train),floor(0.01*nrow(data.train)))
m1 <- tune.svm(Response ~ ., data = data.train[svm.train,], gamma = 10^(-4:-1), cost = 10^(-1:1))
m1
s<-svm(Response ~., type="eps-regression",kernel="radial",gamma=0.01,cost=10, data = data.train[svm.train,])
svm.test <- sample(nrow(data.test),floor(0.01*nrow(data.test)))
svm.predict<- predict(s,data.test[svm.test,])
svm_MSE<-mean((svm.predict-test.data[svm.test,]$Response)^2)
svm_RMSE<-sqrt(svm_MSE)
s
s<-svm(Response ~., type="eps-regression",kernel="radial",gamma=0.001,cost=10, data = data.train[svm.train,])
s
svm.test <- sample(nrow(data.test),floor(0.01*nrow(data.test)))
svm.predict<- predict(s,data.test[svm.test,])
svm.predict
s
m1 <- tune.svm(Response ~ ., data = data.train[svm.train,], gamma = 10^(-4:-1), cost = 10^(-1:1))
m1
s<-svm(Response ~., type="eps-regression",kernel="radial",gamma=0.001,cost=10, data = data.train[svm.train,])
s
s<-svm(Response ~., type="eps-regression",kernel="radial",gamma=0.001,cost=10, data = data.train[svm.train,])
s
svm.test <- sample(nrow(data.test),floor(0.01*nrow(data.test)))
svm.predict<- predict(s,data.test[svm.test,])
svm.predict
svm_MSE<-mean((svm.predict-test.data[svm.test,]$Response)^2)
svm_RMSE<-sqrt(svm_MSE)
svm_MSE
svm_RMSE
reg_model<- lm(Response ~.,data=data.train)
reg.predict<-predict(reg_model,newdata = data.test)
reg_MSE<-mean((reg.predict-test.data$Response)^2)
reg_RMSE<-sqrt(reg_MSE)
summary(reg_model)
reg_MSE
reg_RMSE
rpart.model <- rpart(Response ~ .,data = data.train, method = "anova")
plot(rpart.model)
text(rpart.model,pretty = 0,cex=0.75)
data.test <- predict(pca, newdata = test.data)
data.test <- as.data.frame(data.test)
data.test <- data.test[,1:85]
rpart.prediction <- predict(rpart.model, data.test)
tree_MSE<-mean((rpart.prediction-test.data$Response)^2)
tree_RMSE<-sqrt(tree_MSE)
tree_MSE
tree_RMSE
plot(svm.predict)
std_dev <- pca$sdev
pca_var <- std_dev^2
prop_varex <- pca_var/sum(pca_var)
plot(prop_varex, xlab = "Principal Component",ylab = "Variance Ratio",type = "b")
plot(cumsum(prop_varex), xlab = "Principal Component",ylab = "Cumulative Variance",type = "b")
plot(prop_varex, xlab = "Principal Component",ylab = "Variance Ratio",type = "b")
plot(cumsum(prop_varex), xlab = "Principal Component",ylab = "Cumulative Variance",type = "b")
plot(rpart.model)
text(rpart.model,pretty = 0,cex=0.75)
plot(svm.predict,test.data[svm.test,]$Response)
file<-file.choose()
full.data<-read.csv(file.path(file),header=TRUE)
sum(is.na(full.data$Employment_Info_1)) #19 #mean
sum(is.na(full.data$Employment_Info_4)) #6779
sum(is.na(full.data$Employment_Info_6)) #10854
sum(is.na(full.data$Medical_History_1)) #8889
sum(is.na(full.data$Insurance_History_5)) #25396
sum(is.na(full.data$Family_Hist_2)) #28656
sum(is.na(full.data$Family_Hist_3)) #34241
sum(is.na(full.data$Family_Hist_4)) #25861
sum(is.na(full.data$Family_Hist_5)) #19184
sum(is.na(full.data$Medical_History_10)) #58824
sum(is.na(full.data$Medical_History_15)) #44596
sum(is.na(full.data$Medical_History_24)) #55580
sum(is.na(full.data$Medical_History_32)) #58274
summary(full.data)
my_data <- full.data[, c(-3,-1)]
cor_mat<- cor(my_data,method = "pearson", use = "p")
new_cor_mat<- round(cor_mat, 2)
mat_cor<- new_cor_mat[abs(new_cor_mat) < 0.5] <- NA
full.data[is.na(full.data$Employment_Info_1),"Employment_Info_1"] <-boxplot.stats(full.data$Employment_Info_1)$stats[3]
emp_info4_model<-glm(Employment_Info_4~Employment_Info_1+Employment_Info_2+Employment_Info_3+Employment_Info_5+Family_Hist_1,data = full.data)
emp_info4<-full.data[is.na(full.data$Employment_Info_4),c("Employment_Info_1","Employment_Info_2","Employment_Info_3","Employment_Info_5","Family_Hist_1")]
info4_predict<-predict(emp_info4_model,newdata = emp_info4)
full.data[is.na(full.data$Employment_Info_4),"Employment_Info_4"] <-info4_predict
emp_info6_model<-glm(Employment_Info_6~Employment_Info_1+Employment_Info_3+Employment_Info_4+Family_Hist_1,data = full.data)
emp_info6<-full.data[is.na(full.data$Employment_Info_6),c("Employment_Info_1","Employment_Info_3","Employment_Info_4","Family_Hist_1")]
info6_predict<-predict(emp_info6_model,newdata = emp_info6)
full.data[is.na(full.data$Employment_Info_6),"Employment_Info_6"] <-info6_predict
med_his1_model<-glm(Medical_History_1~Medical_History_2+Medical_History_3+Medical_History_6+Medical_History_8+Medical_History_9+Medical_History_12+Medical_History_13   , data = full.data)
med_his1<-full.data[is.na(full.data$Medical_History_1),c("Medical_History_2","Medical_History_3","Medical_History_6","Medical_History_8","Medical_History_9","Medical_History_12","Medical_History_13")]
hist1_predict<-predict(med_his1_model,newdata = med_his1)
full.data[is.na(full.data$Medical_History_1),"Medical_History_1"] <-hist1_predict
full.set<- subset(full.data, select = -c(Product_Info_2,Product_Info_1,Insurance_History_5,Family_Hist_2,Family_Hist_3,Family_Hist_4,Family_Hist_5,Medical_History_10,Medical_History_15,Medical_History_24,Medical_History_32))
full.set<- subset(full.data, select = -c(Product_Info_2,Product_Info_1,Insurance_History_5,Family_Hist_2,Family_Hist_3,Family_Hist_4,Family_Hist_5,Medical_History_10,Medical_History_15,Medical_History_24,Medical_History_32))
scale.set<-subset(full.set, select= -c(Response,Medical_History_1,Employment_Info_1,Employment_Info_6,Ins_Age,Ht,Wt,BMI,Product_Info_4))
install.packages("dummies")
library(dummies)
new_my_data <- dummy.data.frame(full.set, names = scale.set)
sample_set<-sample(nrow(new_my_data),floor(0.7*nrow(new_my_data)))
train.data<- new_my_data[sample_set,]
test.data<- new_my_data[-sample_set,]
pca <- prcomp(train.data, scale. = T)
names(pca)
std_dev <- pca$sdev
pca_var <- std_dev^2
prop_varex <- pca_var/sum(pca_var)
plot(prop_varex, xlab = "Principal Component",ylab = "Variance Ratio",type = "b")
plot(cumsum(prop_varex), xlab = "Principal Component",ylab = "Cumulative Variance",type = "b")
data.train <- data.frame(Response = train.data$Response, pca$x)
data.train <- data.train[,1:85]
library(rpart)
library(rpart.plot)
library(ggplot2)
library(XLConnectJars)
library(XLConnect)
library(rpart)
library(party)
library(datasets)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
install.packages("xgboost")
library(xgboost)
rpart.model <- rpart(Response ~ .,data = data.train, method = "anova")
plot(rpart.model)
text(rpart.model,pretty = 0,cex=0.75)
data.test <- predict(pca, newdata = test.data)
data.test <- as.data.frame(data.test)
data.test <- data.test[,1:85]
rpart.prediction <- predict(rpart.model, data.test)
tree_MSE<-mean((rpart.prediction-test.data$Response)^2)
tree_RMSE<-sqrt(tree_MSE)
tree_MSE
tree_RMSE
reg_model<- lm(Response ~.,data=data.train)
reg.predict<-predict(reg_model,newdata = data.test)
reg_MSE<-mean((reg.predict-test.data$Response)^2)
reg_RMSE<-sqrt(reg_MSE)
summary(reg_model)
plot(reg_model)
reg_MSE
reg_RMSE
svm.train <- sample(nrow(data.train),floor(0.01*nrow(data.train)))
m1 <- tune.svm(Response ~ ., data = data.train[svm.train,], gamma = 10^(-4:-1), cost = 10^(-1:1))
svm.train <- sample(nrow(data.train),floor(0.01*nrow(data.train)))
m1 <- tune.svm(Response ~ ., data = data.train[svm.train,], gamma = 10^(-4:-1), cost = 10^(-1:1))
m1
s<-svm(Response ~., type="eps-regression",kernel="radial",gamma=0.001,cost=10, data = data.train[svm.train,])
s
